equals의 일반 규약을 지켜 재정의하라


인스턴스를 생성하면 객체는 고유한 해시값을 갖게 됨
equals는 오브젝트의 해시코드 값을 비교함 : 하지만 동등한지에 대해서는 상황에 따라 달라짐

equals를 override 하지 않는 게 최선일때

이퀄즈를 재정의 하는 것이 항상 능사는 아님

1. 값 인스턴스가 본질적으로 고유한 경우 > 값을 표현하느 ㄴ것이 아니라 개체를 표현하는 클래스일때
2. 인스턴스에 논리적으로 같음을 증명할 일이 없을때 사용하지 않을 거라고 예측했기 때문에 재정의 x
3. 상위 클래스에서 재정의한 equals 하위 클래스에서도 동일하게 들어맞을때 > 메서드 정도만 확장이 딘 경우
4. private 클래스여서 equals가 하나 이상 나올 일이 없는 경우

TPO에 맞춰 equals를 재정의할지 잘 결정하여 규약에 맞춰 override할지 정하라

Override시 주의사항
1. 만족해야 하는 조건을 만족시켰는가
2. Equals를 재정의할 때 hashCode도 재정의하였는가
3. Equals의 input이 Object인가 (Overriding 하였는가)
4. 핵심 필드들이 모두 일치하는지
5. [not null] if x is not null, then x.equals(null) == false
